name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  MIX_ENV: test
  ELIXIR_VERSION: "1.18"
  OTP_VERSION: "27"

jobs:
  test:
    name: Test on Elixir ${{matrix.elixir}} / OTP ${{matrix.otp}}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          # Latest stable versions
          - elixir: "1.18"
            otp: "27"
          # Minimum supported versions
          - elixir: "1.14"
            otp: "25"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-

      - name: Install dependencies
        run: mix deps.get

      - name: Compile dependencies
        run: mix deps.compile

      - name: Compile project
        run: mix compile --warnings-as-errors

      - name: Check formatting
        run: mix format --check-formatted
        if: matrix.elixir == '1.18' && matrix.otp == '27'

      - name: Run tests
        run: mix test

      - name: Run coverage
        run: mix coveralls.json
        if: matrix.elixir == '1.18' && matrix.otp == '27'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.elixir == '1.18' && matrix.otp == '27'
        with:
          files: ./cover/excoveralls.json
          fail_ci_if_error: false

  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-quality-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-quality-

      - name: Install dependencies
        run: mix deps.get

      - name: Run Credo
        run: mix credo --strict

      - name: Cache PLT
        uses: actions/cache@v3
        with:
          path: priv/plts
          key: ${{ runner.os }}-plt-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-plt-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-

      - name: Run Dialyzer
        run: mix dialyzer --format github

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-docs-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-docs-

      - name: Install dependencies
        run: mix deps.get

      - name: Build documentation
        run: mix docs

      - name: Check documentation warnings
        run: mix docs 2>&1 | grep -q "warning" && exit 1 || exit 0

