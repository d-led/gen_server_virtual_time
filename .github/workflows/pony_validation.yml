name: Pony Code Validation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'lib/actor_simulation/pony_generator.ex'
      - 'examples/pony_*/**'
      - 'scripts/generate_pony_examples.exs'
      - '.github/workflows/pony_validation.yml'
  pull_request:
    branches: [ main ]

jobs:
  validate-pony-examples:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        example: [pony_pubsub, pony_pipeline, pony_burst, pony_loadbalanced]

    steps:
    - uses: actions/checkout@v3

    - name: Install Pony toolchain (Ubuntu)
      run: |
        sudo apt-get update && sudo apt-get install -y curl build-essential
        # Download pre-built ponyup binary from Cloudsmith (more reliable than init script)
        curl -L https://dl.cloudsmith.io/public/ponylang/releases/raw/versions/latest/ponyup-x86-64-unknown-linux.tar.gz -o ponyup.tgz
        mkdir -p $HOME/.local/share/ponyup/bin/
        mkdir -p /tmp/ponyup
        tar xzf ponyup.tgz -C /tmp/ponyup
        mv /tmp/ponyup/*/bin/* $HOME/.local/share/ponyup/bin/
        echo "x86_64-linux-ubuntu22.04" > $HOME/.local/share/ponyup/.platform
        export PATH="$HOME/.local/share/ponyup/bin:$PATH"
        echo "$HOME/.local/share/ponyup/bin" >> $GITHUB_PATH
        ponyup default "x86_64-linux-ubuntu22.04"
        ponyup version

    - name: Update Pony compiler and Corral
      run: |
        # Ensure ponyup is in PATH
        export PATH="$HOME/.local/share/ponyup/bin:$PATH"
        ponyup update ponyc release
        ponyup update corral release
        # Add bin directories to PATH
        echo "$HOME/.local/share/ponyup/ponyc/release/bin" >> $GITHUB_PATH
        echo "$HOME/.local/share/ponyup/corral/release/bin" >> $GITHUB_PATH

    - name: Fetch dependencies
      working-directory: examples/${{ matrix.example }}
      run: |
        corral fetch || true

    - name: Build Pony project
      working-directory: examples/${{ matrix.example }}
      run: |
        ponyc .

    - name: Build Pony tests
      working-directory: examples/${{ matrix.example }}
      run: |
        ponyc test

    - name: Run PonyTest tests
      working-directory: examples/${{ matrix.example }}
      run: |
        ./test --sequential

    - name: Run application (with timeout)
      working-directory: examples/${{ matrix.example }}
      run: |
        timeout 5 ./${{ matrix.example }} || true
      shell: bash

  regenerate-and-validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.17'
        otp-version: '27'

    - name: Install dependencies
      run: |
        mix deps.get

    - name: Regenerate Pony examples
      run: |
        mix run scripts/generate_pony_examples.exs

    - name: Check for uncommitted changes
      run: |
        git diff --exit-code examples/pony_* || (echo "Generated files differ from committed files!" && exit 1)

    - name: Install Pony toolchain
      run: |
        sudo apt-get update && sudo apt-get install -y curl build-essential
        # Download pre-built ponyup binary from Cloudsmith (more reliable than init script)
        curl -L https://dl.cloudsmith.io/public/ponylang/releases/raw/versions/latest/ponyup-x86-64-unknown-linux.tar.gz -o ponyup.tgz
        mkdir -p $HOME/.local/share/ponyup/bin/
        mkdir -p /tmp/ponyup
        tar xzf ponyup.tgz -C /tmp/ponyup
        mv /tmp/ponyup/*/bin/* $HOME/.local/share/ponyup/bin/
        echo "x86_64-linux-ubuntu22.04" > $HOME/.local/share/ponyup/.platform
        export PATH="$HOME/.local/share/ponyup/bin:$PATH"
        echo "$HOME/.local/share/ponyup/bin" >> $GITHUB_PATH
        ponyup default "x86_64-linux-ubuntu22.04"
        ponyup version

    - name: Update Pony compiler
      run: |
        # Ensure ponyup is in PATH
        export PATH="$HOME/.local/share/ponyup/bin:$PATH"
        ponyup update ponyc release
        ponyup update corral release
        # Add bin directories to PATH
        echo "$HOME/.local/share/ponyup/ponyc/release/bin" >> $GITHUB_PATH
        echo "$HOME/.local/share/ponyup/corral/release/bin" >> $GITHUB_PATH
        # Verify
        which ponyc || (echo "ponyc not found" && exit 1)
        which corral || (echo "corral not found" && exit 1)
        ponyc --version
        corral --version

    - name: Validate all regenerated examples
      run: |
        # Ensure PATH includes pony tools
        export PATH="$HOME/.local/share/ponyup/bin:$HOME/.local/share/ponyup/ponyc/release/bin:$HOME/.local/share/ponyup/corral/release/bin:$PATH"
        for example in examples/pony_*; do
          if [ -d "$example" ]; then
            echo "Validating $example..."
            (
              cd "$example" || exit 1
              corral fetch || true
              ponyc . || exit 1
              ponyc test || exit 1
              ./test --sequential || exit 1
            ) || exit 1
          fi
        done

