name: Test and Deploy Diagrams

on:
  push:
    branches:
      - main
    paths:
      - 'lib/actor_simulation/mermaid_report_generator.ex'
      - 'test/diagram_generation_test.exs'
      - 'test/mermaid_report_test.exs'
      - 'generated/examples/**/*.html'
      - 'generated/examples/**/*.md'
      - '.github/workflows/test-and-deploy-diagrams.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'lib/actor_simulation/mermaid_report_generator.ex'
      - 'test/diagram_generation_test.exs'
      - 'test/mermaid_report_test.exs'
      - 'generated/examples/**/*.html'
      - 'generated/examples/**/*.md'
      - '.github/workflows/test-and-deploy-diagrams.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    name: Run Tests and Generate Diagrams
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18'
          otp-version: '27'

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get

      - name: Run diagram generation tests
        run: mix test --only diagram_generation
      
      - name: Run flowchart report tests  
        run: mix test test/mermaid_report_test.exs

      - name: Copy sequence diagrams to reports directory
        run: |
          cp generated/examples/mermaid_*.html generated/examples/reports/ || true
          cp generated/examples/dining_*.html generated/examples/reports/ || true
          echo "âœ… Copied sequence diagrams to reports directory"

      - name: Upload all examples artifacts
        uses: actions/upload-artifact@v4
        with:
          name: examples-site
          path: generated/examples
          retention-days: 7
          if-no-files-found: error

  deploy:
    name: Deploy to GitHub Pages
    needs: test
    runs-on: ubuntu-latest
    
    # Only deploy on push to main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Download examples site
        uses: actions/download-artifact@v4
        with:
          name: examples-site
          path: public

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

